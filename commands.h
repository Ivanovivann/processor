CPU("hlt", HLT, 0, no_arguments_handler, func_without_arguments, hlt)
CPU("add", ADD, 1, no_arguments_handler, func_without_arguments, add)
CPU("sub", SUB, 2, no_arguments_handler, func_without_arguments, sub)
CPU("mul", MUL, 3, no_arguments_handler, func_without_arguments, mul)
CPU("div", DIV, 4, no_arguments_handler, func_without_arguments, div)
CPU("push", PUSH, 5, one_argument_handler, func_with_one_argument, push)
CPU("number_push", PUSH, 50, one_argument_handler, func_with_one_argument, number_push)
CPU("reg_push", PUSH, 51, one_argument_handler, func_with_one_argument, reg_push)
CPU("pop", POP, 6, no_arguments_handler, func_without_argument, pop)
CPU("classic_pop", POP, 60, no_arguments_handler, func_with_one_argument, classic_pop)
CPU("reg_pop", POP, 61, no_arguments_handler, func_with_one_argument, reg_pop)
CPU("jmp", JMP, 70, one_argument_handler, func_with_one_argument, jmp)
CPU("jb", JB, 71, one_argument_handler, func_with_one_argument, jb)
CPU("jbe", JBE, 72, one_argument_handler, func_with_one_argument, jbe)
CPU("ja", JA, 73, one_argument_handler, func_with_one_argument, ja)
CPU("jae", JAE, 74, one_argument_handler, func_with_one_argument, jae)
CPU("je", JE, 75, one_argument_handler, func_with_one_argument, je)
CPU("jne", JNE, 76, one_argument_handler, func_with_one_argument, jne)
CPU("call", CALL, 77, one_argument_handler, func_with_one_argument, call)
CPU("pow", POW, 8, no_arguments_handler, func_without_arguments, pow)
CPU("fsqrt", FSQRT, 9, no_arguments_handler, func_without_arguments, fsqrt)
CPU("out", OUT, 10, no_arguments_handler, func_without_arguments, out)
CPU("in", IN, 11, no_arguments_handler, func_without_arguments, in)
CPU("ret", RET, 12, no_arguments_handler, func_with_one_argument, ret)
